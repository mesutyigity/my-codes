console.log("Js dosyasÄ± baÄŸlandÄ±.");
//?         ğŸ”¥ğŸ”¥ğŸ”¥       Operators           ğŸ”¥ğŸ”¥ğŸ”¥

//! Atama OperatÃ¶rÃ¼, Aritmetiksel OperatÃ¶rler,ArtÄ±rma ve Azaltma OperatÃ¶rÃ¼, KarÅŸÄ±laÅŸtÄ±rma OperatÃ¶rleri ve Logical(MantÄ±ksal) OperatÃ¶rler

var deneme = 5;
varDeneme = 6;

let myVar = 5;

const myVar1 = 6;

//+ Aritmetiksel OperatÃ¶rler

// +,-,*,/,%
//! + operatÃ¶rÃ¼
const num1 = 10;
const num2 = 69;

const toplam = num1 + num2; // num1 ve num2 operand , + operator olark adlandÄ±rÄ±lÄ±yor.

console.log(toplam);

const msg1 = "Hello";
const msg2 = "World!";

const mesaj = msg1 + msg2;
console.log(mesaj);

const firstName = "Mesut Yigit";
const lastName = "Yildirim";
console.log(firstName, " ", lastName);
const fullName = firstName + " " + lastName; //? + operatÃ¶rÃ¼ String Concatenation iÅŸlemini de yapar.
console.log(fullName);

//! Template Literals (Es6 ile gelen bir Ã¶zellik)
// `merhaba``${deÄŸiÅŸken} ${deÄŸiÅŸken2}`;
// `merhaba` hem string tanÄ±mlamasÄ± yapabiliriz hem de string iÃ§inde deÄŸiÅŸkenlerimizi `${deÄŸiÅŸken}` ÅŸeklinde yazabiliriz. + yerine daha dinamik bir ÅŸekilde stringlerimizi concatenate edebiliriz.

const fullName2 = `${firstName} ${lastName}`;
console.log(fullName2);

